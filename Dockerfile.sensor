# Dockerfile for Vargard Sensor Layer
FROM nvcr.io/nvidia/l4t-base:r35.1.0

# Arguments
ARG ROS_DISTRO=humble

# Install ROS 2 and dependencies
RUN apt-get update && apt-get install -y \
    python3-colcon-common-extensions \
    ros-${ROS_DISTRO}-rclpy \
    ros-${ROS_DISTRO}-sensor-msgs \
    ros-${ROS_DISTRO}-cv-bridge \
    python3-opencv \
    python3-serial \
    ros-${ROS_DISTRO}-diagnostic-updater \
    && rm -rf /var/lib/apt/lists/*

# Workspace setup
WORKDIR /workspace
# Create a non-root user, prepare log directory, and ensure ownership
RUN useradd -ms /bin/bash vargard \
    && mkdir -p /var/log/vargard \
    && chown vargard:vargard /var/log/vargard \
    && chown -R vargard:vargard /workspace
USER vargard
COPY vargard_sensor_layer /workspace/vargard_sensor_layer
COPY setup.py /workspace/setup.py
COPY package.xml /workspace/package.xml
COPY CMakeLists.txt /workspace/CMakeLists.txt
# Include DDS security assets (optional)
COPY security /workspace/security

# Build
RUN source /opt/ros/${ROS_DISTRO}/setup.sh && \
    colcon build --packages-select vargard_sensor_layer --symlink-install

# Runtime execution with optional DDS security and structured logs
ENTRYPOINT ["/bin/bash", "-lc", "source /workspace/install/setup.bash && if [ -d /workspace/security/keystore ] && [ -n \"$(ls -A /workspace/security/keystore 2>/dev/null)\" ]; then ros2 run vargard_sensor_layer sensor_node --ros-args --enclave /workspace/security/keystore -p enable_diagnostics:=True; else ros2 run vargard_sensor_layer sensor_node --ros-args -p enable_diagnostics:=True; fi > /var/log/vargard/sensor_node.log 2>&1"]